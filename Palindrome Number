class Solution {
    public boolean isPalindrome(int x) {
        int value = x;
        if(x < 0){
            return false;
        }
        int res = 0;
        while(x != 0){
            res = res * 10 + x%10;
            x = x/10;
        }
        if(res == value){
            return true;
        }
        return false;
    }
}



//Another Approach  O(n)

class Solution {
    public boolean isPalindrome(int x) {
        if(x < 0){
            return false;
        }
        String s = String.valueOf(x);
        int len = s.length();
        for(int i = 0; i < len/2; i++){
            if(s.charAt(i) != s.charAt(len-i-1)){
                return false;
            }
        }
        return true;
    }
}


//Approach O(log(n))

class Solution {
    public boolean isPalindrome(int x) {
        if(x < 0 || (x%10 == 0 && x != 0)){
            return false;
        }
        int reverse = 0;
        while(x > reverse){
            reverse = reverse * 10 + x%10;
            x/= 10;
        }
        return x==reverse || x == reverse/10;
    }
}






